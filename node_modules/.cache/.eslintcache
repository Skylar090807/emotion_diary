[{"/Users/skylar/study/React/emotion_diary/src/index.js":"1","/Users/skylar/study/React/emotion_diary/src/App.js":"2","/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx":"3","/Users/skylar/study/React/emotion_diary/src/pages/Edit.jsx":"4","/Users/skylar/study/React/emotion_diary/src/pages/Home.jsx":"5","/Users/skylar/study/React/emotion_diary/src/pages/New.jsx":"6","/Users/skylar/study/React/emotion_diary/src/components/RouterTest.jsx":"7","/Users/skylar/study/React/emotion_diary/src/components/Button.jsx":"8","/Users/skylar/study/React/emotion_diary/src/components/Header.jsx":"9","/Users/skylar/study/React/emotion_diary/src/components/DiaryList.jsx":"10"},{"size":428,"mtime":1648002084328,"results":"11","hashOfConfig":"12"},{"size":2936,"mtime":1649035928800,"results":"13","hashOfConfig":"12"},{"size":210,"mtime":1648018497256,"results":"14","hashOfConfig":"12"},{"size":965,"mtime":1648023809114,"results":"15","hashOfConfig":"12"},{"size":2265,"mtime":1649036628448,"results":"16","hashOfConfig":"12"},{"size":93,"mtime":1648004540292,"results":"17","hashOfConfig":"12"},{"size":342,"mtime":1648005728863,"results":"18","hashOfConfig":"12"},{"size":349,"mtime":1648087061606,"results":"19","hashOfConfig":"12"},{"size":314,"mtime":1648088267408,"results":"20","hashOfConfig":"12"},{"size":2366,"mtime":1649130936228,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"lc4n8k",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"/Users/skylar/study/React/emotion_diary/src/index.js",[],[],["55","56"],"/Users/skylar/study/React/emotion_diary/src/App.js",[],[],"/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx",[],[],"/Users/skylar/study/React/emotion_diary/src/pages/Edit.jsx",[],[],"/Users/skylar/study/React/emotion_diary/src/pages/Home.jsx",[],[],"/Users/skylar/study/React/emotion_diary/src/pages/New.jsx",[],[],"/Users/skylar/study/React/emotion_diary/src/components/RouterTest.jsx",[],[],["57","58"],"/Users/skylar/study/React/emotion_diary/src/components/Button.jsx",[],[],"/Users/skylar/study/React/emotion_diary/src/components/Header.jsx",[],[],"/Users/skylar/study/React/emotion_diary/src/components/DiaryList.jsx",["59","60","61"],[],"import React from 'react'\nimport { useState } from 'react'\n\nconst sortOptionList = [\n  { value: 'latest', name: '최신 일기' },\n  { value: 'oldest', name: '오랜 일기' },\n]\n\nconst ControlMenu = ({ value, onChange, optionList }) => {\n  //value prop: ControlMenu가 렌더링 하는 select가 어떤 것을 선택하고 있는지 알려주는 역할.\n  //onChange prop: select가 변경되었을 때 바꿀 기능을 하는 함수.\n  //optionList prop: select 태그 안의 options.\n  return (\n    <select value={value} onChange={(e) => onChange(e.target.value)}>\n      {optionList.map((it, idx) => (\n        <option key={idx} value={it.value}>\n          {it.name}\n        </option>\n      ))}\n    </select>\n  )\n}\n\n//diaryList prop은 Home.jsx에서 useContext로 받아 온 data를 대입해준 것.\nconst DiaryList = ({ diaryList }) => {\n  //정렬 기준이 되는 state\n  const [sortType, setSortType] = useState('latest')\n\n  //ControlMenu option 선택 시 해당 일기 보여주는 기능 구현.\n\n  //배열 diaryList prop 깊은 복사!\n  //diaryList.sort()를 사용하면 기존 배열 자체가 변경되기 때문에\n  // 깊은 복사를 한 후 JSON.parse(JSON.stringify())함수를 사용해 데이터를 붙여 넣어 주고 copyList에 대입한다.\n  console.log('diaryList', diaryList)\n  const getProcessedDiaryList = () => {\n    const compare = (a, b) => {\n      if (sortType === 'latest') {\n        return parseInt(b.date) - parseInt(a.date)\n      } else {\n        return parseInt(a.date) - parseInt(b.date)\n      }\n    }\n\n    const copyList = JSON.parse(JSON.stringify(diaryList))\n  }\n\n  return (\n    <div>\n      {/* controlMenu의 value prop역할은 정렬기준이 되는 sortType을 변화시키는 select의 역할을 하기때문에 value에 sortType을 내려준다. */}\n      {/* onChange prop의 역할은 select가 변화 되었을 때 수행되어야 하므로 setSortType을 내려준다. */}\n      {/* optionList prop의 역할은 어떤 일기인지 option을 보여주는 것이므로 일기 종류를 배열로 담고있는 sortOptionList를 내려준다. */}\n      <ControlMenu value={sortType} onChange={setSortType} optionList={sortOptionList} />\n      {diaryList.map((it) => (\n        <div key={it.id}>{it.content}</div>\n      ))}\n    </div>\n  )\n}\n\nDiaryList.defaultProps = {\n  diaryList: [],\n}\nexport default DiaryList\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":35,"column":9,"nodeType":"70","messageId":"71","endLine":35,"endColumn":30},{"ruleId":"68","severity":1,"message":"72","line":36,"column":11,"nodeType":"70","messageId":"71","endLine":36,"endColumn":18},{"ruleId":"68","severity":1,"message":"73","line":44,"column":11,"nodeType":"70","messageId":"71","endLine":44,"endColumn":19},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],["74"],["75"],"no-unused-vars","'getProcessedDiaryList' is assigned a value but never used.","Identifier","unusedVar","'compare' is assigned a value but never used.","'copyList' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]