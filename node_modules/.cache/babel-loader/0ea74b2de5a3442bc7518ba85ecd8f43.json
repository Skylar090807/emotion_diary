{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DiaryStateContext } from '../App';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getStringDate = date => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n\n  if (month < 10) {\n    month = `0${month}`;\n  }\n\n  if (day < 10) {\n    day = `0${day}`;\n  }\n\n  return `${year}-${month}-${day}`;\n};\n\nconst Diary = () => {\n  _s();\n\n  //Path Variable\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [diaryDetail, setDiaryDetail] = useState();\n  const navigate = useNavigate();\n  const diaryList = useContext(DiaryStateContext);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find( //\n      it => Number(it.id) === Number(id));\n      console.log(targetDiary);\n\n      if (targetDiary) {\n        setDiaryDetail(targetDiary);\n      } else {\n        alert('존재하지 않는 일기입니다. 메인 페이지로 돌아갑니다. ');\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]); //useEffect()의 diaryDetail은 useEffect()에서 setDiary(targetDiary)를 통해\n  //targetDiary를 추적 중.\n\n  console.log('diaryDetail', diaryDetail);\n\n  if (!diaryDetail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB2E4\\uC774\\uC5B4\\uB9AC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Diary, \"sFK+OIDygqzdsoACgT3+uBPtvTs=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx"],"names":["React","useContext","useEffect","useState","useNavigate","useParams","DiaryStateContext","Header","getStringDate","date","year","getFullYear","month","getMonth","day","getDate","Diary","id","console","log","diaryDetail","setDiaryDetail","navigate","diaryList","length","targetDiary","find","it","Number","alert","replace"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,MAAIC,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;AACA,MAAIC,KAAK,GAAGH,IAAI,CAACI,QAAL,KAAkB,CAA9B;AACA,MAAIC,GAAG,GAAGL,IAAI,CAACM,OAAL,EAAV;;AAEA,MAAIH,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACD;;AAED,MAAIE,GAAG,GAAG,EAAV,EAAc;AACZA,IAAAA,GAAG,GAAI,IAAGA,GAAI,EAAd;AACD;;AAED,SAAQ,GAAEJ,IAAK,IAAGE,KAAM,IAAGE,GAAI,EAA/B;AACD,CAdD;;AAgBA,MAAME,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASZ,SAAS,EAAxB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,EAA9C;AAEA,QAAMmB,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAMmB,SAAS,GAAGtB,UAAU,CAACK,iBAAD,CAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACzB,YAAMC,WAAW,GAAGF,SAAS,CAACG,IAAV,EAClB;AACCC,MAAAA,EAAD,IAAQC,MAAM,CAACD,EAAE,CAACV,EAAJ,CAAN,KAAkBW,MAAM,CAACX,EAAD,CAFd,CAApB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;;AAEA,UAAIA,WAAJ,EAAiB;AACfJ,QAAAA,cAAc,CAACI,WAAD,CAAd;AACD,OAFD,MAEO;AACLI,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACAP,QAAAA,QAAQ,CAAC,GAAD,EAAM;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAN,CAAR;AACD;AACF;AACF,GAfQ,EAeN,CAACb,EAAD,EAAKM,SAAL,CAfM,CAAT,CAXkB,CA4BlB;AACA;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,WAA3B;;AAEA,MAAI,CAACA,WAAL,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CAzCD;;GAAMJ,K;UAEWX,S,EAKED,W;;;KAPbY,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { DiaryStateContext } from '../App'\nimport Header from '../components/Header'\n\nconst getStringDate = (date) => {\n  let year = date.getFullYear()\n  let month = date.getMonth() + 1\n  let day = date.getDate()\n\n  if (month < 10) {\n    month = `0${month}`\n  }\n\n  if (day < 10) {\n    day = `0${day}`\n  }\n\n  return `${year}-${month}-${day}`\n}\n\nconst Diary = () => {\n  //Path Variable\n  const { id } = useParams()\n  console.log(id)\n\n  const [diaryDetail, setDiaryDetail] = useState()\n\n  const navigate = useNavigate()\n\n  const diaryList = useContext(DiaryStateContext)\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        //\n        (it) => Number(it.id) === Number(id),\n      )\n      console.log(targetDiary)\n\n      if (targetDiary) {\n        setDiaryDetail(targetDiary)\n      } else {\n        alert('존재하지 않는 일기입니다. 메인 페이지로 돌아갑니다. ')\n        navigate('/', { replace: true })\n      }\n    }\n  }, [id, diaryList])\n\n  //useEffect()의 diaryDetail은 useEffect()에서 setDiary(targetDiary)를 통해\n  //targetDiary를 추적 중.\n  console.log('diaryDetail', diaryDetail)\n\n  if (!diaryDetail) {\n    return <div>다이어리가 없습니다.</div>\n  } else {\n    return (\n      <div>\n        <Header />\n      </div>\n    )\n  }\n}\n\nexport default Diary\n"]},"metadata":{},"sourceType":"module"}