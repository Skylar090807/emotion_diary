{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/pages/New.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '../components/Button';\nimport Header from '../components/Header'; // '오늘의 날짜 선택' 캘린더에서 오늘의 날짜가 default로 떠있게 하기 위해서는 new Date()객체를 함수\n// 안에서 가공 해준 후 useState() 초기값으로 할당해줘야 한다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getStringDate = () => {};\n\nconst New = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [date, setDate] = useState();\n\n  const pagebackHandler = () => {\n    navigate(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headText: '새로운 일기',\n      leftChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: '< 뒤로가기',\n        onClick: pagebackHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uB0A0\\uC9DC \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(New, \"eHG1wbLKDLc0Kdyhc4REmIDUHz8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/pages/New.jsx"],"names":["React","useState","useNavigate","Button","Header","getStringDate","New","navigate","date","setDate","pagebackHandler","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;;;;AACA,MAAMC,aAAa,GAAG,MAAM,CAAE,CAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;;AAEA,QAAMS,eAAe,GAAG,MAAM;AAC5BH,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,QAAlB;AAA4B,MAAA,SAAS,eAAE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAwB,QAAA,OAAO,EAAEG;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAGC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArBD;;GAAMP,G;UACaJ,W;;;KADbI,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from '../components/Button'\nimport Header from '../components/Header'\n\n// '오늘의 날짜 선택' 캘린더에서 오늘의 날짜가 default로 떠있게 하기 위해서는 new Date()객체를 함수\n// 안에서 가공 해준 후 useState() 초기값으로 할당해줘야 한다.\nconst getStringDate = () => {}\n\nconst New = () => {\n  const navigate = useNavigate()\n\n  const [date, setDate] = useState()\n\n  const pagebackHandler = () => {\n    navigate(-1)\n  }\n  return (\n    <div>\n      <Header headText={'새로운 일기'} leftChild={<Button text={'< 뒤로가기'} onClick={pagebackHandler} />} />\n      <div>\n        <section>\n          <h4>오늘의 날짜 선택</h4>\n          <div className=\"input-box\">\n            <input type=\"date\" onChange={(e) => setDate(e.target.value)} />\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}