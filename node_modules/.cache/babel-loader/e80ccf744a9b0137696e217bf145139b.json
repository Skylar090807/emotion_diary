{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/components/DiaryEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from './Button';\nimport EmotionItem from './EmotionItem';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || '';\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `assets/emotion1.png`,\n  emotion_descript: '행복해'\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `assets/emotion2.png`,\n  emotion_descript: '즐거워'\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `assets/emotion3.png`,\n  emotion_descript: '그냥 그래'\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `assets/emotion4.png`,\n  emotion_descript: '짜증나'\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `assets/emotion5.png`,\n  emotion_descript: '최악이야'\n}]; // '오늘의 날짜 선택' 캘린더에서 오늘의 날짜가 default로 떠있게 하기 위해서는 new Date()객체를 함수\n// 안에서 .toISOString().slice(0, 10)로 가공 해준 후 useState() 초기값으로 할당해줘야 한다.\n\nconst getStringDate = date => {\n  return date.toISOString().slice(0, 10); //toISOString은 new Date()객체의 메서드.\n  //toISOString() 출력\n  // 2022-04-06T02:07:07.202Z\n  //date.toISOString().slice(0, 10) 출력\n  // 2022-04-06\n};\n\nconst DiaryEditor = () => {\n  _s();\n\n  //getStringDate 출력 확인\n  console.log(getStringDate(new Date())); //getStringDate에 new Date()를 할당한 것과 아래는 동일하다.\n\n  console.log(new Date().toISOString().slice(0, 10));\n  const navigate = useNavigate();\n  const contentRef = useRef();\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const [emotion, setEmotion] = useState(3);\n  const [content, setContent] = useState();\n\n  const pagebackHandler = () => {\n    navigate(-1);\n  };\n\n  const emotionClickHandler = emotion => {\n    setEmotion(emotion);\n  };\n\n  const onChangeHandler = event => {\n    setContent(event.target.value);\n  };\n\n  const submitHandler = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headText: '새로운 일기',\n      leftChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: '< 뒤로가기',\n        onClick: pagebackHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uB0A0\\uC9DC \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_date\",\n            value: date,\n            type: \"date\",\n            onChange: e => setDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uB098\\uC758 \\uAC10\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box emotion_list_wrap\",\n          children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem //\n          , { ...it,\n            clickEvent: emotionClickHandler,\n            isSelected: it.emotion_id === emotion\n          }, it.emotion_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_box text_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            //\n            ref: contentRef,\n            value: content,\n            onChange: onChangeHandler,\n            placeholder: \"\\uC5B4\\uB5A4 \\uD558\\uB8E8\\uB97C \\uBCF4\\uB0C8\\uB098\\uC694?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control_button_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            text: '작성 취소',\n            type: 'negative',\n            onClick: pagebackHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: '일기 저장',\n            type: 'positive',\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DiaryEditor, \"GL+pSNxa3RHl6urtAkN9qENOfwo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DiaryEditor;\nexport default DiaryEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/components/DiaryEditor.jsx"],"names":["React","useState","useRef","useNavigate","Button","EmotionItem","Header","env","process","PUBLIC_URL","emotionList","emotion_id","emotion_img","emotion_descript","getStringDate","date","toISOString","slice","DiaryEditor","console","log","Date","navigate","contentRef","setDate","emotion","setEmotion","content","setContent","pagebackHandler","emotionClickHandler","onChangeHandler","event","target","value","submitHandler","length","current","focus","e","map","it"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from './Button'\nimport EmotionItem from './EmotionItem'\nimport Header from './Header'\n\nconst env = process.env\nenv.PUBLIC_URL = env.PUBLIC_URL || ''\n\nconst emotionList = [\n  {\n    emotion_id: 1,\n    emotion_img: process.env.PUBLIC_URL + `assets/emotion1.png`,\n    emotion_descript: '행복해',\n  },\n  {\n    emotion_id: 2,\n    emotion_img: process.env.PUBLIC_URL + `assets/emotion2.png`,\n    emotion_descript: '즐거워',\n  },\n  {\n    emotion_id: 3,\n    emotion_img: process.env.PUBLIC_URL + `assets/emotion3.png`,\n    emotion_descript: '그냥 그래',\n  },\n  {\n    emotion_id: 4,\n    emotion_img: process.env.PUBLIC_URL + `assets/emotion4.png`,\n    emotion_descript: '짜증나',\n  },\n  {\n    emotion_id: 5,\n    emotion_img: process.env.PUBLIC_URL + `assets/emotion5.png`,\n    emotion_descript: '최악이야',\n  },\n]\n\n// '오늘의 날짜 선택' 캘린더에서 오늘의 날짜가 default로 떠있게 하기 위해서는 new Date()객체를 함수\n// 안에서 .toISOString().slice(0, 10)로 가공 해준 후 useState() 초기값으로 할당해줘야 한다.\nconst getStringDate = (date) => {\n  return date.toISOString().slice(0, 10)\n  //toISOString은 new Date()객체의 메서드.\n  //toISOString() 출력\n  // 2022-04-06T02:07:07.202Z\n\n  //date.toISOString().slice(0, 10) 출력\n  // 2022-04-06\n}\n\nconst DiaryEditor = () => {\n  //getStringDate 출력 확인\n  console.log(getStringDate(new Date()))\n  //getStringDate에 new Date()를 할당한 것과 아래는 동일하다.\n  console.log(new Date().toISOString().slice(0, 10))\n\n  const navigate = useNavigate()\n\n  const contentRef = useRef()\n\n  const [date, setDate] = useState(getStringDate(new Date()))\n  const [emotion, setEmotion] = useState(3)\n  const [content, setContent] = useState()\n\n  const pagebackHandler = () => {\n    navigate(-1)\n  }\n\n  const emotionClickHandler = (emotion) => {\n    setEmotion(emotion)\n  }\n\n  const onChangeHandler = (event) => {\n    setContent(event.target.value)\n  }\n\n  const submitHandler = () => {\n    if (content.length < 1) {\n      contentRef.current.focus()\n      return\n    }\n  }\n\n  return (\n    <div className=\"DiaryEditor\">\n      <Header headText={'새로운 일기'} leftChild={<Button text={'< 뒤로가기'} onClick={pagebackHandler} />} />\n      <div>\n        <section>\n          <h4>날짜 선택</h4>\n          <div className=\"input_box\">\n            <input className=\"input_date\" value={date} type=\"date\" onChange={(e) => setDate(e.target.value)} />\n          </div>\n        </section>\n        <section>\n          <h4>나의 감정</h4>\n          <div className=\"input_box emotion_list_wrap\">\n            {emotionList.map((it) => (\n              <EmotionItem //\n                key={it.emotion_id}\n                {...it}\n                clickEvent={emotionClickHandler}\n                isSelected={it.emotion_id === emotion}\n              />\n            ))}\n          </div>\n        </section>\n        <section>\n          <h4>오늘의 일기</h4>\n          <div className=\"input_box text_wrapper\">\n            <textarea //\n              ref={contentRef}\n              value={content}\n              onChange={onChangeHandler}\n              placeholder=\"어떤 하루를 보냈나요?\"\n            />\n          </div>\n        </section>\n        <section>\n          <div className=\"control_button_wrap\">\n            <Button text={'작성 취소'} type={'negative'} onClick={pagebackHandler} />\n            <Button text={'일기 저장'} type={'positive'} onClick={() => {}} />\n          </div>\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default DiaryEditor\n"]},"metadata":{},"sourceType":"module"}