{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer, useRef } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\nimport New from './pages/New';\nimport Edit from './pages/Edit';\nimport Diary from './pages/Diary'; //useReducer() 첫번째 인자 reducer 함수 구현\n//state는 action을 수행 이전 state 값이다. 초기화된 빈 배열 상태.(로컬스토리지 사용 중 이므로 로컬스토리지에 남아있는 data)\n//action은 switch 조건문에 따라 실행 될 type. action엔 list와 type이 있다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  let newState = [];\n  console.log('action', action);\n  console.log('state', state);\n\n  switch (action.type) {\n    case 'INIT':\n      {\n        return action.list; //action.list는 현재 다이어리 리스트가 담겨있으므로 return action.list는 현재 일기를 return하는 것.\n      }\n\n    case 'CREATE':\n      {\n        // const newItem = {\n        //   ...action.data,\n        // }\n        // newState = [newItem, ...state]\n        newState = [action.list, ...state]; // state.unshift(action.list)\n\n        break; //reducer 함수 안에서 멤버 변수로 선언한 빈 배열 newState에 action.list를 담고, 이전 state를 복사해 담는다.\n        //따라서 현재 일기와 이전 일기를 보여주는 것이다.\n      }\n\n    case 'REMOVE':\n      {\n        newState = state.filter(it => it.id !== action.targetId);\n        break; //state의 이전 값을 filter해 이전 값에 있는 id와 action.targetId 현재 수행된 아이디가 다른 것만 보여준다.\n        //따라서 전달 받은 targetId와 다른 것만 보여주는 것이므로 전달 받은 targetId data는 보여주지 않는다.\n      }\n\n    case 'Edit':\n      {\n        newState = state.map(it => it.id === action.list.id ? { ...action.list\n        } : it);\n        break; //이전 값인 state를 map으로 순회하하며 state id와 action.list.id가 같으면 현재 수행하는 action.list를 복사해 보여주고\n        //아니라면 state를 보여준다. 즉 현재 수행 중인 id의 변경 사항을 복사해 보여주므로 결과적으로는 수정 된다.\n      }\n\n    default:\n      return state;\n  }\n\n  localStorage.setItem('diary', JSON.stringify(newState));\n  return newState;\n};\n\nexport const DiaryStateContext = /*#__PURE__*/createContext();\nexport const DiaryDispatchContext = /*#__PURE__*/createContext();\n\nfunction App() {\n  _s();\n\n  /*\n    useReducer()\n    배열 형태로 구조할당 받는 list, dispatch 설명.\n    -list : 추적 할 state, 초기값을 빈 배열로 줬으니 빈 배열로 시작\n    -dispatch : reducer에서 따로 구현해 준 action을 dispatch해주는 함수\n    useRedcer() arguments 설명.\n    -reducer: 이전 값 state, type이 실행 될 action을 arguments로 받아 따로 구현하는 함수. \n  */\n  const [list, dispatch] = useReducer(reducer, []);\n  useEffect(() => {\n    const localStorageData = localStorage.getItem('diary');\n\n    if (localStorageData) {\n      const diaryList = JSON.parse(localStorageData).sort((a, b) => Number(b.id) - Number(a.id));\n      dataId.current = Number(diaryList[0].id) + 1;\n      console.log('localStorage diaryList', diaryList);\n      console.log('dataId', dataId);\n      dispatch({\n        type: 'INIT',\n        list: diaryList\n      });\n    }\n  }, []);\n  const dataId = useRef(0); //useReducer dispatch 함수 구현\n\n  const onCreate = (date, content, emotion) => {\n    dispatch({\n      type: 'CREATE',\n      list: {\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion\n      }\n    });\n    dataId.current += 1;\n  };\n\n  const onRemove = targetId => {\n    dispatch({\n      type: 'REMOVE',\n      targetId\n    });\n  };\n\n  const onEdit = (targetId, date, content, emotion) => {\n    dispatch({\n      type: 'EDIT',\n      list: {\n        id: targetId,\n        date: new Date(date).getTime(),\n        content,\n        emotion\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DiaryStateContext.Provider, {\n    value: list,\n    children: /*#__PURE__*/_jsxDEV(DiaryDispatchContext.Provider, {\n      value: {\n        onCreate,\n        onRemove,\n        onEdit\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/new\",\n              element: /*#__PURE__*/_jsxDEV(New, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/edit\",\n              element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/edit/:id\",\n              element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/diary\",\n              element: /*#__PURE__*/_jsxDEV(Diary, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/diary/:id\",\n              element: /*#__PURE__*/_jsxDEV(Diary, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uIHRqOfZLXny/S65rhAbNn8vjas=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/App.js"],"names":["createContext","useEffect","useReducer","useRef","BrowserRouter","Route","Routes","Home","New","Edit","Diary","reducer","state","action","newState","console","log","type","list","filter","it","id","targetId","map","localStorage","setItem","JSON","stringify","DiaryStateContext","DiaryDispatchContext","App","dispatch","localStorageData","getItem","diaryList","parse","sort","a","b","Number","dataId","current","onCreate","date","content","emotion","Date","getTime","onRemove","onEdit"],"mappings":"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","sourcesContent":["import { createContext, useEffect, useReducer, useRef } from 'react'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport './App.css'\nimport Home from './pages/Home'\nimport New from './pages/New'\nimport Edit from './pages/Edit'\nimport Diary from './pages/Diary'\n\n//useReducer() 첫번째 인자 reducer 함수 구현\n//state는 action을 수행 이전 state 값이다. 초기화된 빈 배열 상태.(로컬스토리지 사용 중 이므로 로컬스토리지에 남아있는 data)\n//action은 switch 조건문에 따라 실행 될 type. action엔 list와 type이 있다.\nconst reducer = (state, action) => {\n  let newState = []\n  console.log('action', action)\n  console.log('state', state)\n\n  switch (action.type) {\n    case 'INIT': {\n      return action.list\n      //action.list는 현재 다이어리 리스트가 담겨있으므로 return action.list는 현재 일기를 return하는 것.\n    }\n    case 'CREATE': {\n      // const newItem = {\n      //   ...action.data,\n      // }\n      // newState = [newItem, ...state]\n      newState = [action.list, ...state] // state.unshift(action.list)\n      break\n      //reducer 함수 안에서 멤버 변수로 선언한 빈 배열 newState에 action.list를 담고, 이전 state를 복사해 담는다.\n      //따라서 현재 일기와 이전 일기를 보여주는 것이다.\n    }\n    case 'REMOVE': {\n      newState = state.filter((it) => it.id !== action.targetId)\n      break\n      //state의 이전 값을 filter해 이전 값에 있는 id와 action.targetId 현재 수행된 아이디가 다른 것만 보여준다.\n      //따라서 전달 받은 targetId와 다른 것만 보여주는 것이므로 전달 받은 targetId data는 보여주지 않는다.\n    }\n    case 'Edit': {\n      newState = state.map((it) => (it.id === action.list.id ? { ...action.list } : it))\n      break\n      //이전 값인 state를 map으로 순회하하며 state id와 action.list.id가 같으면 현재 수행하는 action.list를 복사해 보여주고\n      //아니라면 state를 보여준다. 즉 현재 수행 중인 id의 변경 사항을 복사해 보여주므로 결과적으로는 수정 된다.\n    }\n    default:\n      return state\n  }\n\n  localStorage.setItem('diary', JSON.stringify(newState))\n  return newState\n}\n\nexport const DiaryStateContext = createContext()\n\nexport const DiaryDispatchContext = createContext()\n\nfunction App() {\n  /*\n    useReducer()\n    배열 형태로 구조할당 받는 list, dispatch 설명.\n    -list : 추적 할 state, 초기값을 빈 배열로 줬으니 빈 배열로 시작\n    -dispatch : reducer에서 따로 구현해 준 action을 dispatch해주는 함수\n    useRedcer() arguments 설명.\n    -reducer: 이전 값 state, type이 실행 될 action을 arguments로 받아 따로 구현하는 함수. \n  */\n  const [list, dispatch] = useReducer(reducer, [])\n\n  useEffect(() => {\n    const localStorageData = localStorage.getItem('diary')\n    if (localStorageData) {\n      const diaryList = JSON.parse(localStorageData).sort((a, b) => Number(b.id) - Number(a.id))\n\n      dataId.current = Number(diaryList[0].id) + 1\n\n      console.log('localStorage diaryList', diaryList)\n      console.log('dataId', dataId)\n\n      dispatch({ type: 'INIT', list: diaryList })\n    }\n  }, [])\n\n  const dataId = useRef(0)\n\n  //useReducer dispatch 함수 구현\n  const onCreate = (date, content, emotion) => {\n    dispatch({\n      type: 'CREATE',\n      list: {\n        id: dataId.current,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    })\n    dataId.current += 1\n  }\n\n  const onRemove = (targetId) => {\n    dispatch({ type: 'REMOVE', targetId })\n  }\n\n  const onEdit = (targetId, date, content, emotion) => {\n    dispatch({\n      type: 'EDIT',\n      list: {\n        id: targetId,\n        date: new Date(date).getTime(),\n        content,\n        emotion,\n      },\n    })\n  }\n\n  return (\n    <DiaryStateContext.Provider value={list}>\n      <DiaryDispatchContext.Provider value={{ onCreate, onRemove, onEdit }}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/new\" element={<New />} />\n              <Route path=\"/edit\" element={<Edit />} />\n              <Route path=\"/edit/:id\" element={<Edit />} />\n              <Route path=\"/diary\" element={<Diary />} />\n              <Route path=\"/diary/:id\" element={<Diary />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}