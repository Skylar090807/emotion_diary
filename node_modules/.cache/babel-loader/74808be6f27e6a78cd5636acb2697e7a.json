{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DiaryStateContext } from '../App';\nimport Button from '../components/Button';\nimport Header from '../components/Header';\nimport { getStringDate } from '../util/date';\nimport { emotionList } from '../util/emotionList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || '';\n\nconst Diary = () => {\n  _s();\n\n  //Path Variable\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [diaryDetail, setDiaryDetail] = useState();\n  const navigate = useNavigate();\n  const diaryList = useContext(DiaryStateContext);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find( //\n      it => Number(it.id) === Number(id));\n      console.log(targetDiary);\n\n      if (targetDiary) {\n        setDiaryDetail(targetDiary);\n      } else {\n        alert('존재하지 않는 일기입니다. 메인 페이지로 돌아갑니다. ');\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]);\n\n  const pagebackHandler = () => {\n    navigate(-1);\n  };\n\n  const goEditHandler = () => {\n    navigate(`/edit/${diaryDetail.id}`);\n  }; //useEffect()의 diaryDetail은 useEffect()에서 setDiary(targetDiary)를 통해\n  //targetDiary를 추적 중.\n\n\n  console.log('diaryDetail', diaryDetail);\n\n  if (!diaryDetail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB2E4\\uC774\\uC5B4\\uB9AC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else {\n    const currentEmotion = emotionList.find( //\n    it => Number(it.emotion_id) === Number(diaryDetail.emotion));\n    console.log('emotionList', emotionList);\n    console.log('currentEmotion', currentEmotion);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: [/*#__PURE__*/_jsxDEV(Header //\n      , {\n        headText: `${getStringDate(new Date(diaryDetail.date))} 나의 감정`,\n        leftChild: /*#__PURE__*/_jsxDEV(Button //\n        , {\n          text: '< 뒤로가기',\n          onClick: pagebackHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(Button //\n        , {\n          text: '수정하기',\n          onClick: goEditHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298 \\uB098\\uC758 \\uAC10\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: ['diary_img_wrapper', `diary_img_wrapper_${diaryDetail.emotion}`].join(' '),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: diaryDetail.emotion_img,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emotion_descript\",\n              children: currentEmotion.emotion_descript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Diary, \"sFK+OIDygqzdsoACgT3+uBPtvTs=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx"],"names":["React","useContext","useEffect","useState","useNavigate","useParams","DiaryStateContext","Button","Header","getStringDate","emotionList","env","process","PUBLIC_URL","Diary","id","console","log","diaryDetail","setDiaryDetail","navigate","diaryList","length","targetDiary","find","it","Number","alert","replace","pagebackHandler","goEditHandler","currentEmotion","emotion_id","emotion","Date","date","join","emotion_img","emotion_descript"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;AACAA,GAAG,CAACE,UAAJ,GAAiBF,GAAG,CAACE,UAAJ,IAAkB,EAAnC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,EAA9C;AAEA,QAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAMiB,SAAS,GAAGpB,UAAU,CAACK,iBAAD,CAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACzB,YAAMC,WAAW,GAAGF,SAAS,CAACG,IAAV,EAClB;AACCC,MAAAA,EAAD,IAAQC,MAAM,CAACD,EAAE,CAACV,EAAJ,CAAN,KAAkBW,MAAM,CAACX,EAAD,CAFd,CAApB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;;AAEA,UAAIA,WAAJ,EAAiB;AACfJ,QAAAA,cAAc,CAACI,WAAD,CAAd;AACD,OAFD,MAEO;AACLI,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACAP,QAAAA,QAAQ,CAAC,GAAD,EAAM;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAN,CAAR;AACD;AACF;AACF,GAfQ,EAeN,CAACb,EAAD,EAAKM,SAAL,CAfM,CAAT;;AAiBA,QAAMQ,eAAe,GAAG,MAAM;AAC5BT,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACD,GAFD;;AAIA,QAAMU,aAAa,GAAG,MAAM;AAC1BV,IAAAA,QAAQ,CAAE,SAAQF,WAAW,CAACH,EAAG,EAAzB,CAAR;AACD,GAFD,CAhCkB,CAoClB;AACA;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,WAA3B;;AAEA,MAAI,CAACA,WAAL,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,UAAMa,cAAc,GAAGrB,WAAW,CAACc,IAAZ,EACrB;AACCC,IAAAA,EAAD,IAAQC,MAAM,CAACD,EAAE,CAACO,UAAJ,CAAN,KAA0BN,MAAM,CAACR,WAAW,CAACe,OAAb,CAFnB,CAAvB;AAIAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BP,WAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bc,cAA9B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD,CAAQ;AAAR;AACE,QAAA,QAAQ,EAAG,GAAEtB,aAAa,CAAC,IAAIyB,IAAJ,CAAShB,WAAW,CAACiB,IAArB,CAAD,CAA6B,QADzD;AAEE,QAAA,SAAS,eACP,QAAC,MAAD,CAAQ;AAAR;AACE,UAAA,IAAI,EAAE,QADR;AAEE,UAAA,OAAO,EAAEN;AAFX;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAQE,QAAA,UAAU,eACR,QAAC,MAAD,CAAQ;AAAR;AACE,UAAA,IAAI,EAAE,MADR;AAEE,UAAA,OAAO,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAE,CAAC,mBAAD,EAAuB,qBAAoBZ,WAAW,CAACe,OAAQ,EAA/D,EAAkEG,IAAlE,CAAuE,GAAvE,CAAhB;AAAA,oCACE;AAAK,cAAA,GAAG,EAAElB,WAAW,CAACmB,WAAtB;AAAmC,cAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,wBAAmCN,cAAc,CAACO;AAAlD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;AACF,CA/ED;;GAAMxB,K;UAEWT,S,EAKED,W;;;KAPbU,K;AAiFN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { DiaryStateContext } from '../App'\nimport Button from '../components/Button'\nimport Header from '../components/Header'\nimport { getStringDate } from '../util/date'\nimport { emotionList } from '../util/emotionList'\n\nconst env = process.env\nenv.PUBLIC_URL = env.PUBLIC_URL || ''\n\nconst Diary = () => {\n  //Path Variable\n  const { id } = useParams()\n  console.log(id)\n\n  const [diaryDetail, setDiaryDetail] = useState()\n\n  const navigate = useNavigate()\n\n  const diaryList = useContext(DiaryStateContext)\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        //\n        (it) => Number(it.id) === Number(id),\n      )\n      console.log(targetDiary)\n\n      if (targetDiary) {\n        setDiaryDetail(targetDiary)\n      } else {\n        alert('존재하지 않는 일기입니다. 메인 페이지로 돌아갑니다. ')\n        navigate('/', { replace: true })\n      }\n    }\n  }, [id, diaryList])\n\n  const pagebackHandler = () => {\n    navigate(-1)\n  }\n\n  const goEditHandler = () => {\n    navigate(`/edit/${diaryDetail.id}`)\n  }\n\n  //useEffect()의 diaryDetail은 useEffect()에서 setDiary(targetDiary)를 통해\n  //targetDiary를 추적 중.\n  console.log('diaryDetail', diaryDetail)\n\n  if (!diaryDetail) {\n    return <div>다이어리가 없습니다.</div>\n  } else {\n    const currentEmotion = emotionList.find(\n      //\n      (it) => Number(it.emotion_id) === Number(diaryDetail.emotion),\n    )\n    console.log('emotionList', emotionList)\n    console.log('currentEmotion', currentEmotion)\n\n    return (\n      <div className=\"DiaryPage\">\n        <Header //\n          headText={`${getStringDate(new Date(diaryDetail.date))} 나의 감정`}\n          leftChild={\n            <Button //\n              text={'< 뒤로가기'}\n              onClick={pagebackHandler}\n            />\n          }\n          rightChild={\n            <Button //\n              text={'수정하기'}\n              onClick={goEditHandler}\n            />\n          }\n        />\n        <article>\n          <section>\n            <h4>오늘 나의 감정</h4>\n            <div className={['diary_img_wrapper', `diary_img_wrapper_${diaryDetail.emotion}`].join(' ')}>\n              <img src={diaryDetail.emotion_img} alt=\"\" />\n              <div className=\"emotion_descript\">{currentEmotion.emotion_descript}</div>\n            </div>\n          </section>\n        </article>\n      </div>\n    )\n  }\n}\n\nexport default Diary\n"]},"metadata":{},"sourceType":"module"}