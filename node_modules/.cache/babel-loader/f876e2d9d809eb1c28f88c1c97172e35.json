{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport { DiaryStateContext } from '../App';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  //useContext 사용해 DiaryStateContext.Provider에서 value로 공급한 data를 diaryList에 대입.\n  const diaryList = useContext(DiaryStateContext); // data 가공위해 useState() 💽\n\n  const [data, setData] = useState([]);\n  const [curDate, setCurDate] = useState(new Date());\n  console.log(curDate); //getMonth는 0월 부터 시작해서 +1 해줘야 한다.\n\n  const headerTxt = `${curDate.getFullYear()}년 ${curDate.getMonth() + 1}월`; // data 가공위해 useEffect() 💽\n\n  useEffect(() => {\n    //firstDay는 오늘 날짜 해당 월에 첫번째 날\n    const firstDay = new Date(curDate.getFullYear(), curDate.getMonth(), 1).getTime();\n    console.log('firstDay : ', new Date(firstDay)); //lastDay는 오늘 날짜 해당 월에 마지막 날\n\n    const lastDay = new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0).getTime();\n    console.log('lastDay : ', new Date(lastDay)); //setData에서 diaryList는(App.js에서 공급받은  data) filter()를 사용하여 가공한다.\n\n    setData(diaryList.filter(it => firstDay <= it.date && lastDay >= it.date));\n  }, [curDate, diaryList]); // diaryList를 deps에 전달하지 않으면 diaryList가 변경 되었을 때 useEffect가 동작하지 않는다.\n\n  const increaseMonth = () => {\n    setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() + 1, curDate.getDate()));\n  };\n\n  const decreseMonth = () => {\n    setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() - 1, curDate.getDate()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {\n      headText: headerTxt,\n      leftChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: '<',\n        onClick: decreseMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this),\n      rightChild: /*#__PURE__*/_jsxDEV(Button, {\n        text: '>',\n        onClick: increaseMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"22/Zlhdu08DawEjuK8eQeO7lFVQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/pages/Home.jsx"],"names":["React","useContext","useState","Header","Button","DiaryStateContext","useEffect","Home","diaryList","data","setData","curDate","setCurDate","Date","console","log","headerTxt","getFullYear","getMonth","firstDay","getTime","lastDay","filter","it","date","increaseMonth","getDate","decreseMonth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA,QAAMC,SAAS,GAAGP,UAAU,CAACI,iBAAD,CAA5B,CAFiB,CAIjB;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAAtC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EARiB,CAUjB;;AACA,QAAMK,SAAS,GAAI,GAAEL,OAAO,CAACM,WAAR,EAAsB,KAAIN,OAAO,CAACO,QAAR,KAAqB,CAAE,GAAtE,CAXiB,CAajB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,QAAQ,GAAG,IAAIN,IAAJ,CAASF,OAAO,CAACM,WAAR,EAAT,EAAgCN,OAAO,CAACO,QAAR,EAAhC,EAAoD,CAApD,EAAuDE,OAAvD,EAAjB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,IAAIF,IAAJ,CAASM,QAAT,CAA3B,EAHc,CAKd;;AACA,UAAME,OAAO,GAAG,IAAIR,IAAJ,CAASF,OAAO,CAACM,WAAR,EAAT,EAAgCN,OAAO,CAACO,QAAR,KAAqB,CAArD,EAAwD,CAAxD,EAA2DE,OAA3D,EAAhB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,IAAIF,IAAJ,CAASQ,OAAT,CAA1B,EAPc,CASd;;AACAX,IAAAA,OAAO,CAACF,SAAS,CAACc,MAAV,CAAkBC,EAAD,IAAQJ,QAAQ,IAAII,EAAE,CAACC,IAAf,IAAuBH,OAAO,IAAIE,EAAE,CAACC,IAA9D,CAAD,CAAP;AACD,GAXQ,EAWN,CAACb,OAAD,EAAUH,SAAV,CAXM,CAAT,CAdiB,CAyBQ;;AAEzB,QAAMiB,aAAa,GAAG,MAAM;AAC1Bb,IAAAA,UAAU,CAAC,IAAIC,IAAJ,CAASF,OAAO,CAACM,WAAR,EAAT,EAAgCN,OAAO,CAACO,QAAR,KAAqB,CAArD,EAAwDP,OAAO,CAACe,OAAR,EAAxD,CAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBf,IAAAA,UAAU,CAAC,IAAIC,IAAJ,CAASF,OAAO,CAACM,WAAR,EAAT,EAAgCN,OAAO,CAACO,QAAR,KAAqB,CAArD,EAAwDP,OAAO,CAACe,OAAR,EAAxD,CAAD,CAAV;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,QAAQ,EAAEV,SADZ;AAEE,MAAA,SAAS,eAAE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,GAAd;AAAmB,QAAA,OAAO,EAAEW;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFb;AAGE,MAAA,UAAU,eAAE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,GAAd;AAAmB,QAAA,OAAO,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3CD;;GAAMlB,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport { DiaryStateContext } from '../App'\nimport { useEffect } from 'react'\n\nconst Home = () => {\n  //useContext 사용해 DiaryStateContext.Provider에서 value로 공급한 data를 diaryList에 대입.\n  const diaryList = useContext(DiaryStateContext)\n\n  // data 가공위해 useState() 💽\n  const [data, setData] = useState([])\n\n  const [curDate, setCurDate] = useState(new Date())\n  console.log(curDate)\n\n  //getMonth는 0월 부터 시작해서 +1 해줘야 한다.\n  const headerTxt = `${curDate.getFullYear()}년 ${curDate.getMonth() + 1}월`\n\n  // data 가공위해 useEffect() 💽\n  useEffect(() => {\n    //firstDay는 오늘 날짜 해당 월에 첫번째 날\n    const firstDay = new Date(curDate.getFullYear(), curDate.getMonth(), 1).getTime()\n    console.log('firstDay : ', new Date(firstDay))\n\n    //lastDay는 오늘 날짜 해당 월에 마지막 날\n    const lastDay = new Date(curDate.getFullYear(), curDate.getMonth() + 1, 0).getTime()\n    console.log('lastDay : ', new Date(lastDay))\n\n    //setData에서 diaryList는(App.js에서 공급받은  data) filter()를 사용하여 가공한다.\n    setData(diaryList.filter((it) => firstDay <= it.date && lastDay >= it.date))\n  }, [curDate, diaryList]) // diaryList를 deps에 전달하지 않으면 diaryList가 변경 되었을 때 useEffect가 동작하지 않는다.\n\n  const increaseMonth = () => {\n    setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() + 1, curDate.getDate()))\n  }\n\n  const decreseMonth = () => {\n    setCurDate(new Date(curDate.getFullYear(), curDate.getMonth() - 1, curDate.getDate()))\n  }\n  return (\n    <div>\n      <Header\n        headText={headerTxt}\n        leftChild={<Button text={'<'} onClick={decreseMonth} />}\n        rightChild={<Button text={'>'} onClick={increaseMonth} />}\n      />\n    </div>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}