{"ast":null,"code":"var _jsxFileName = \"/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { DiaryStateContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Diary = () => {\n  _s();\n\n  //Path Variable\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [diaryDetail, setDiaryDetail] = useState();\n  const navigate = useNavigate();\n  const diaryList = useContext(DiaryStateContext);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find( //\n      it => Number(it.id) === Number(id));\n      console.log(targetDiary);\n\n      if (targetDiary) {\n        setDiaryDetail(targetDiary);\n      } else {\n        alert('존재하지 않는 일기입니다. 메인 페이지로 돌아갑니다. ');\n        navigate('/', {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]); //useEffect()의 diaryDetail은 useEffect()에서 setDiary(targetDiary)\n\n  console.log('diaryDetail', diaryDetail);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Diary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Diary, \"sFK+OIDygqzdsoACgT3+uBPtvTs=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["/Users/skylar/study/React/emotion_diary/src/pages/Diary.jsx"],"names":["React","useContext","useEffect","useState","useNavigate","useParams","DiaryStateContext","Diary","id","console","log","diaryDetail","setDiaryDetail","navigate","diaryList","length","targetDiary","find","it","Number","alert","replace"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,iBAAT,QAAkC,QAAlC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AAEA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,SAAS,GAAGb,UAAU,CAACK,iBAAD,CAA5B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACzB,YAAMC,WAAW,GAAGF,SAAS,CAACG,IAAV,EAClB;AACCC,MAAAA,EAAD,IAAQC,MAAM,CAACD,EAAE,CAACV,EAAJ,CAAN,KAAkBW,MAAM,CAACX,EAAD,CAFd,CAApB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYM,WAAZ;;AAEA,UAAIA,WAAJ,EAAiB;AACfJ,QAAAA,cAAc,CAACI,WAAD,CAAd;AACD,OAFD,MAEO;AACLI,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACAP,QAAAA,QAAQ,CAAC,GAAD,EAAM;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAN,CAAR;AACD;AACF;AACF,GAfQ,EAeN,CAACb,EAAD,EAAKM,SAAL,CAfM,CAAT,CAXkB,CA4BlB;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,WAA3B;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhCD;;GAAMJ,K;UAEWF,S,EAKED,W;;;KAPbG,K;AAkCN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { DiaryStateContext } from '../App'\n\nconst Diary = () => {\n  //Path Variable\n  const { id } = useParams()\n  console.log(id)\n\n  const [diaryDetail, setDiaryDetail] = useState()\n\n  const navigate = useNavigate()\n\n  const diaryList = useContext(DiaryStateContext)\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        //\n        (it) => Number(it.id) === Number(id),\n      )\n      console.log(targetDiary)\n\n      if (targetDiary) {\n        setDiaryDetail(targetDiary)\n      } else {\n        alert('존재하지 않는 일기입니다. 메인 페이지로 돌아갑니다. ')\n        navigate('/', { replace: true })\n      }\n    }\n  }, [id, diaryList])\n\n  //useEffect()의 diaryDetail은 useEffect()에서 setDiary(targetDiary)\n  console.log('diaryDetail', diaryDetail)\n\n  return <div>Diary</div>\n}\n\nexport default Diary\n"]},"metadata":{},"sourceType":"module"}